{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/App.module.css","components/Loader/Loder.module.css","redux/contacts/contacts-actions.js","services/contacts-api.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Loader/Loader.js","components/Error/Error.js","components/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","fetchContacts","a","axios","get","data","addContact","contact","post","then","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","getLoader","isLoading","getError","error","getVisibleContacts","createSelector","allContacts","contactFilter","name","toLocaleLowerCase","includes","ContactForm","useState","contactName","setContactName","contactNumber","setContactNumber","useSelector","dispatch","useDispatch","onAddContact","number","contactsActions","contactsAPI","message","onInputValue","e","target","value","onSubmit","preventDefault","some","alert","className","ContactFormStl","label","type","onChange","input","buttonSubmit","ContactListItem","onRemove","ContactListItemStl","container","contactInfo","action","onClick","ContactsList","visibleContacts","onRemoveItem","id","contactId","delete","removeContact","ContactListStl","contactList","map","visibleContact","Filter","FilterStl","filterContainer","App","LoaderStl","loaderContainer","color","height","width","timeout","React","Component","Error","console","log","useEffect","toast","loader","AppStl","heading","length","createReducer","actions","_","payload","combineReducers","rootReducer","contactsReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.82ea637b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"buttonSubmit\":\"ContactForm_buttonSubmit__12HOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactListItem_container__1g0r6\",\"contactInfo\":\"ContactListItem_contactInfo__1edqM\",\"action\":\"ContactListItem_action__3waij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2eDOn\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__6j1zw\",\"heading\":\"App_heading__2TEJG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Loder_loaderContainer__2pEVj\"};","import { createAction } from '@reduxjs/toolkit';\n//-------------------------Fetch-Contacts---------------------------------\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\n//-------------------------ADD-Contact----------------------------------\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\n//-------------------------Delete-Contact\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n//-------------------------old----------------------------------\n\nexport const filterContacts = createAction('contact/Filter');\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get('/contacts');\n  return data;\n}\n\nexport async function addContact(contact) {\n  return axios.post('/contacts', contact).then(({ data }) => data);\n}\n\nexport const deleteContact = contactId => {\n  return axios.delete(`/contacts/${contactId}`);\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoader = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (allContacts, contactFilter) =>\n    allContacts.filter(contact =>\n      contact.name\n        .toLocaleLowerCase()\n        .includes(contactFilter.toLocaleLowerCase()),\n    ),\n);\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, addContact } from '../../redux/contacts';\n\nimport ContactFormStl from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const onAddContact = (name, number) => dispatch(addContact(name, number));\n\n  const onInputValue = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'contactName':\n        setContactName(value);\n        break;\n      case 'contactNumber':\n        setContactNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onSubmitContact = e => {\n    e.preventDefault();\n    if (contacts.some(contact => contact.name === contactName)) {\n      alert(`${contactName} is already in Contacts`);\n      return;\n    }\n    onAddContact(contactName, contactNumber);\n    setContactName('');\n    setContactNumber('');\n  };\n\n  return (\n    <form onSubmit={onSubmitContact} className={ContactFormStl.ContactForm}>\n      <label className={ContactFormStl.label}>\n        Name\n        <input\n          type=\"text\"\n          value={contactName}\n          onChange={onInputValue}\n          name=\"contactName\"\n          className={ContactFormStl.input}\n        />\n      </label>\n      <label className={ContactFormStl.label}>\n        Phone Number\n        <input\n          type=\"text\"\n          value={contactNumber}\n          onChange={onInputValue}\n          name=\"contactNumber\"\n          className={ContactFormStl.input}\n        />\n      </label>\n      <button type=\"submit\" className={ContactFormStl.buttonSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import * as contactsActions from './contacts-actions';\nimport * as contactsAPI from '../../services/contacts-api';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(contactsActions.fetchContactsRequest());\n  try {\n    const items = await contactsAPI.fetchContacts();\n\n    dispatch(contactsActions.fetchContactsSuccess(items));\n  } catch (error) {\n    dispatch(contactsActions.fetchContactsError(error.message));\n  }\n};\n\nexport const addContact = (contactName, contactNumber) => async dispatch => {\n  const contact = {\n    name: contactName,\n    number: contactNumber,\n  };\n  dispatch(contactsActions.addContactRequest());\n\n  try {\n    contactsAPI\n      .addContact(contact)\n      .then(data => dispatch(contactsActions.addContactSuccess(data)));\n  } catch (error) {\n    dispatch(contactsActions.addContactError(error.message));\n  }\n};\n\nexport const removeContact = id => async dispatch => {\n  dispatch(contactsActions.deleteContactRequest());\n  try {\n    contactsAPI\n      .deleteContact(id)\n      .then(() => dispatch(contactsActions.deleteContactSuccess(id)));\n  } catch (error) {\n    contactsActions.deleteContactRequest(error.message);\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItemStl from './ContactListItem.module.css';\n\nfunction ContactListItem({ contact, onRemove }) {\n  const { name, number } = contact;\n\n  return (\n    <li className={ContactListItemStl.container}>\n      <div className={ContactListItemStl.contactInfo}>\n        {name} : {number}\n      </div>\n      <section className={ContactListItemStl.action}>\n        <button type=\"button\" onClick={onRemove}>\n          Delete\n        </button>\n      </section>\n    </li>\n  );\n}\nContactListItem.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { removeContact, getVisibleContacts } from '../../redux/contacts';\n\nimport ContactListItem from './ContactListItem/ContactListItem';\nimport ContactListStl from './ContactListItem/ContactListItem.module.css';\n\nexport default function ContactsList() {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onRemoveItem = id => dispatch(removeContact(id));\n\n  return (\n    <ul className={ContactListStl.contactList}>\n      {visibleContacts.map(visibleContact => (\n        <ContactListItem\n          contact={visibleContact}\n          onRemove={() => onRemoveItem(visibleContact.id)}\n          key={visibleContact.id}\n        />\n      ))}\n    </ul>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter, filterContacts } from '../../redux/contacts/';\n\nimport FilterStl from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChangeFilter = e => dispatch(filterContacts(e.target.value));\n  return (\n    <div className={FilterStl.filterContainer}>\n      <label className={FilterStl.label}>\n        Find contact by name:\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={onChangeFilter}\n          name=\"filter\"\n          className={FilterStl.input}\n        />\n      </label>\n    </div>\n  );\n}\n","import React from 'react';\nimport LoaderStl from './Loder.module.css';\n\nimport Loader from 'react-loader-spinner';\nexport default class App extends React.Component {\n  //other logic\n  render() {\n    return (\n      <div className={LoaderStl.loaderContainer}>\n        <Loader\n          type=\"Puff\"\n          color=\"#999999\"\n          height={50}\n          width={50}\n          timeout={3000} //3 secs\n        />\n      </div>\n    );\n  }\n}\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getError } from '../../redux/contacts';\n\nexport default function Error() {\n  const error = useSelector(getError);\n  console.log(error);\n\n  const notify = () => toast.error(`${error}`);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => notify(), [error]);\n  return <div>{/* <button onClick={notify}>Notify !</button> */}</div>;\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getContacts,\n  getLoader,\n  getError,\n  fetchContacts,\n} from '../redux/contacts';\nimport { ToastContainer } from 'react-toastify';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactsList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport Loader from './Loader/Loader';\nimport Error from './Error/Error';\n\nimport AppStl from './App.module.css';\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(getContacts);\n  const loader = useSelector(getLoader);\n  const error = useSelector(getError);\n\n  return (\n    <div className={AppStl.container}>\n      <h2 className={AppStl.heading}>PhoneBook</h2>\n      <ContactForm />\n      <h2 className={AppStl.heading}>Contacts</h2>\n      <ToastContainer />\n      {contacts.length > 1 && <Filter />}\n      {loader && <Loader />}\n      {error && <Error />}\n      {contacts.length > 0 && !loader && <ContactsList />}\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-actions';\n\nconst initialState = [];\n\nconst initialFilter = '';\n\nconst items = createReducer(initialState, {\n  [actions.fetchContactsSuccess]: (_, action) => action.payload,\n  [actions.addContactSuccess]: (state, action) => [...state, action.payload],\n  [actions.deleteContactSuccess]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst isLoading = createReducer(false, {\n  [actions.fetchContactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false,\n  [actions.fetchContactsError]: () => false,\n\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n\n  [actions.deleteContactRequest]: () => true,\n  [actions.deleteContactSuccess]: () => false,\n  [actions.deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [actions.fetchContactsError]: (_, action) => action.payload,\n  [actions.addContactError]: (_, action) => action.payload,\n  [actions.deleteContactError]: (_, action) => action.payload,\n});\n\nconst filter = createReducer(initialFilter, {\n  [actions.filterContacts]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport 'modern-normalize';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}